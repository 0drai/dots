# vim: set ft=zsh :

export XDG_CONFIG_HOME="${HOME}/.config"
export XDG_DATA_HOME="${HOME}/.local/share"
export XDG_CACHE_HOME="${HOME}/.cache"
export XDG_DOCUMENTS_DIR="${HOME}/docs"
export XDG_RUNTIME_DIR="/run/user/$(id -u)"
export XDG_DESKTOP_DIR="$HOME"
export XDG_VIDEOS_DIR="$HOME"

export TERMINFO="/usr/lib/terminfo"

HISTSIZE=100000
SAVEHIST=100000
HISTFILE="${XDG_CACHE_HOME}/zsh_history"

export GITHUB="git@github.com:0drai"
export ADOTDIR="${XDG_CONFIG_HOME}/antigen"
export DOCS="$XDG_DOCUMENTS_DIR"
export ORGMODE="${DOCS}/org/"
export NEORG="${DOCS}/neorg/"
export WIKI="${DOCS}/wiki/"
export PAPERS="${DOCS}/papers"
export PDFS="${DOCS}/pdfs"
export MASTERBIB="${PAPERS}/paperpile.bib"
export LESSHISTFILE="/dev/null"
export TMPDIR="/tmp/"

[ -x "$(command -v qutebrowser)" ] && export BROWSER="/usr/bin/qutebrowser"
# [ -x "$(command -v st)" ] && export TERMINAL="/usr/local/bin/st"
[ -x "$(command -v alacritty)" ] && export TERMINAL="/usr/bin/alacritty"
[ -x "$(command -v bat)" ] && export MANPAGER="sh -c 'col -bx | bat -l man -p'"
[ -x "$(command -v ipython)" ] && export IPYTHONDIR="${XDG_CONFIG_HOME}/ipython"

if [[ -x "$(command -v 7z)" ]]; then
	export COMPRESS="7z a -t7z -m0=lzma -mx=9 -mfb=64 -md=32m -ms=on"
fi

if [[ -x "$(command -v task)" ]]; then
	export TASKRC="${XDG_CONFIG_HOME}/task/taskrc"
	export TASKDATA="${XDG_DATA_HOME}/task"
fi

if [[ -x "$(command -v nvim)" ]]; then
	export EDITOR="nvim"
	export VISUAL="nvim"
	export SUDO_EDITOR="nvim -u NONE"
fi

if [[ -x "$(command -v fd)" && -x "$(command -v fzf)" ]]; then
	export FZF_DEFAULT_COMMAND="fd --type file --color=always"
	export FZF_DEFAULT_OPTS="--ansi"
	export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
fi

if [[ -x "$(command -v pass)" ]]; then
	export PASSWORD_STORE_DIR="${XDG_DATA_HOME}/pass"
	export PASSWORD_STORE_ENABLE_EXTENSIONS=true
fi

if [[ -x "$(command -v notmuch)" ]]; then
	export NOTMUCH_CONFIG="${HOME}/.notmuch-config"
fi

if [[ -x "$(command -v gpg)" ]]; then
	export GNUPGHOME="${HOME}/.gnupg"
fi

if [[ -x "$(command -v micromamba)" ]]; then
	export MAMBA_VENV_PATH="${MAMBA_ROOT_PREFIX}/envs"
	export MAMBARC="${XDG_CONFIG_HOME}/mambarc"
	export MAMBA_EXE="/usr/bin/micromamba"
	export MAMBA_ROOT_PREFIX="/home/d0pa/.local/share/micromamba"
	path+=("$MAMBA_ROOT_PREFIX"/bin)
fi

if [[ -x "$(command -v conda)" ]]; then
	export CONDA_ROOT_PREFIX="/opt/miniconda3"
	export CONDA_EXE="${CONDA_ROOT_PREFIX}/bin/conda"
	export CONDA_VENV_PATH="${CONDA_ROOT_PREFIX}/envs"
	path+=(/opt/miniconda3/bin/)
fi

if [[ -x "$(command -v obsidian)" ]]; then
	export ZK="${DOCS}/zk/"
fi

if [[ -x "$(command -v cargo)" ]]; then
	export CARGO_HOME="${XDG_DATA_HOME}/cargo"
	path+=("$CARGO_HOME"/bin/)
fi

if [[ -x "$(command -v go)" ]]; then
	export GOPATH="${XDG_DATA_HOME}/go"
	path+=("$GOPATH"/bin/)
fi

if [[ -x "$(command -v yarn)" ]]; then
	path+=(/opt/yarn/bin/)
fi

# if [[ -x "$(command -v lua)" ]]; then
#   path+=(/opt/lua-language-server/bin/Linux)
# fi

# if [[ -x "$(command -v ruby)" ]]; then
# 	path+=(${XDG_DATA_HOME}/gem/ruby/3.0.0/bin/)
# fi

# if [[ -x "$(command -v java)" ]]; then
	#  ayyyyyyyyyyyyyyyyyyyy
	#  https://bbs.archlinux.org/viewtopic.php?id=159016
	# export _JAVA_AWT_WM_NONREPARENTING=1
# fi

path+=("$HOME"/.local/bin/)
path+=("$HOME"/.local/share/JetBrains/Toolbox/scripts/)

# no duplicated entries
# typeset -U path
export PATH
