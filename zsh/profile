# vim: set ft=zsh :

export DESKTOP_SESSION=xfce
export XDG_CURRENT_DESKTOP=XFCE
export XDG_CONFIG_HOME="${HOME}/.config"
export XDG_DATA_HOME="${HOME}/.local/share"
export XDG_CACHE_HOME="${HOME}/.cache"
export XDG_DOCUMENTS_DIR="${HOME}/docs"
export XDG_DOWNLOAD_DIR="${HOME}/dl"
export XDG_RUNTIME_DIR="/run/user/$(id -u)"
export XDG_DESKTOP_DIR="$HOME"
export XDG_VIDEOS_DIR="$HOME"

# export TERMINFO="/usr/lib/terminfo"

HISTSIZE=100000
SAVEHIST=100000
HISTFILE="${XDG_CACHE_HOME}/zsh_history"

export GITHUB="git@github.com:0drai"
export ADOTDIR="${XDG_CONFIG_HOME}/antigen"
export DOCS="$XDG_DOCUMENTS_DIR"
export ORGMODE="${DOCS}/org/"
export NEORG="${DOCS}/neorg/"
export ZK="${DOCS}/zk/main"
export WIKI="${DOCS}/wiki/"
export PAPERS="${DOCS}/papers"
export PDFS="${DOCS}/pdfs"
export MASTERBIB="${PAPERS}/paperpile.bib"
export LESSHISTFILE="/dev/null"
export TMPDIR="/tmp/"
export IPYTHONDIR="${XDG_CONFIG_HOME}/ipython"
# export DBX_CONTAINER_HOME_PREFIX="${HOME}/dbx"

[ -x "$(command -v qutebrowser)" ] && export BROWSER="/usr/bin/qutebrowser"
[ -x "$(command -v alacritty)" ] && export TERMINAL="/usr/bin/alacritty"
# [ -x "$(command -v bat)" ] && export MANPAGER="sh -c 'col -bx | bat -l man -p'"

if [[ -x "$(command -v 7z)" ]]; then
	export COMPRESS="7z a -t7z -m0=lzma -mx=9 -mfb=64 -md=32m -ms=on"
fi

if [[ -x "$(command -v task)" ]]; then
	export TASKRC="${XDG_CONFIG_HOME}/task/taskrc"
	export TASKDATA="${XDG_DATA_HOME}/task"
fi

if [[ -x "$(command -v nvim)" ]]; then
	export EDITOR="vim"
	export VISUAL="vim"
	export SUDO_EDITOR="vim"
fi

if [[ -x "$(command -v distrobox)" ]]; then
	export DEV_EDITOR="distrobox enter dev -- nvim"
fi

if [[ -x "$(command -v fd)" && -x "$(command -v fzf)" ]]; then
	export FZF_DEFAULT_COMMAND="fd --type file --color=always"
	export FZF_DEFAULT_OPTS="--ansi"
	export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
fi

if [[ -x "$(command -v pass)" ]]; then
	export PASSWORD_STORE_DIR="${XDG_DATA_HOME}/pass"
	export PASSWORD_STORE_ENABLE_EXTENSIONS=true
fi

if [[ -x "$(command -v notmuch)" ]]; then
	export NOTMUCH_CONFIG="${HOME}/.notmuch-config"
fi

if [[ -x "$(command -v gpg)" ]]; then
	export GNUPGHOME="${HOME}/.gnupg"
fi

if [[ -x "$(command -v micromamba)" ]]; then
	path+=("$MAMBA_ROOT_PREFIX"/bin)
fi

if [[ -x "$(command -v conda)" ]]; then
	export CONDA_ROOT_PREFIX="/opt/miniconda3"
	export CONDA_EXE="${CONDA_ROOT_PREFIX}/bin/conda"
	export CONDA_VENV_PATH="${CONDA_ROOT_PREFIX}/envs"
	path+=(/opt/miniconda3/bin/)
fi

export MAMBA_VENV_PATH="${MAMBA_ROOT_PREFIX}/envs"
export MAMBARC="${XDG_CONFIG_HOME}/mambarc"
export MAMBA_EXE="${HOME}/.local/bin/micromamba"
export MAMBA_ROOT_PREFIX="${XDG_DATA_HOME}/micromamba"
__mamba_setup="$("$MAMBA_EXE" shell hook --shell zsh --prefix "$MAMBA_ROOT_PREFIX" 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__mamba_setup"
else
    if [ -f "/home/d0pa/.local/share/micromamba/etc/profile.d/micromamba.sh" ]; then
        . "/home/d0pa/.local/share/micromamba/etc/profile.d/micromamba.sh"
    else
        export  PATH="/home/d0pa/.local/share/micromamba/bin:$PATH"  # extra space after export prevents interference from conda init
    fi
fi
unset __mamba_setup

# unset CARGO_HOME
if [[ -x "$(command -v cargo)" ]]; then
	export CARGO_HOME="${XDG_DATA_HOME}/cargo"
	path+=("$CARGO_HOME"/bin/)
fi

if [[ -x "$(command -v go)" ]]; then
	export GOPATH="${XDG_DATA_HOME}/go"
	path+=("$GOPATH"/bin/)
fi

if [[ -x "$(command -v yarn)" ]]; then
	path+=(/opt/yarn/bin/)
fi

#  https://bbs.archlinux.org/viewtopic.php?id=159016
export _JAVA_AWT_WM_NONREPARENTING=1
export GHIDRA_INSTALL_DIR="$HOME"/.local/share/ghidra

path+=("$HOME"/.local/bin/)

# no duplicated entries
# typeset -U path
export PATH
